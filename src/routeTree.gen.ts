/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as homeRouteRouteImport } from './routes/(home)/route'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as homeIndexRouteImport } from './routes/(home)/index'
import { Route as homeTestRouteImport } from './routes/(home)/test'
import { Route as homeAddRouteImport } from './routes/(home)/add'
import { Route as homeAboutRouteImport } from './routes/(home)/about'

const homeRouteRoute = homeRouteRouteImport.update({
  id: '/(home)',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRouteImport,
} as any)
const homeIndexRoute = homeIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => homeRouteRoute,
} as any)
const homeTestRoute = homeTestRouteImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => homeRouteRoute,
} as any)
const homeAddRoute = homeAddRouteImport.update({
  id: '/add',
  path: '/add',
  getParentRoute: () => homeRouteRoute,
} as any)
const homeAboutRoute = homeAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => homeRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof homeIndexRoute
  '/about': typeof homeAboutRoute
  '/add': typeof homeAddRoute
  '/test': typeof homeTestRoute
  '/auth': typeof AuthIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof homeAboutRoute
  '/add': typeof homeAddRoute
  '/test': typeof homeTestRoute
  '/': typeof homeIndexRoute
  '/auth': typeof AuthIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(home)': typeof homeRouteRouteWithChildren
  '/(home)/about': typeof homeAboutRoute
  '/(home)/add': typeof homeAddRoute
  '/(home)/test': typeof homeTestRoute
  '/(home)/': typeof homeIndexRoute
  '/auth/': typeof AuthIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/add' | '/test' | '/auth'
  fileRoutesByTo: FileRoutesByTo
  to: '/about' | '/add' | '/test' | '/' | '/auth'
  id:
    | '__root__'
    | '/(home)'
    | '/(home)/about'
    | '/(home)/add'
    | '/(home)/test'
    | '/(home)/'
    | '/auth/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  homeRouteRoute: typeof homeRouteRouteWithChildren
  AuthIndexRoute: typeof AuthIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(home)': {
      id: '/(home)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof homeRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(home)/': {
      id: '/(home)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof homeIndexRouteImport
      parentRoute: typeof homeRouteRoute
    }
    '/(home)/test': {
      id: '/(home)/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof homeTestRouteImport
      parentRoute: typeof homeRouteRoute
    }
    '/(home)/add': {
      id: '/(home)/add'
      path: '/add'
      fullPath: '/add'
      preLoaderRoute: typeof homeAddRouteImport
      parentRoute: typeof homeRouteRoute
    }
    '/(home)/about': {
      id: '/(home)/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof homeAboutRouteImport
      parentRoute: typeof homeRouteRoute
    }
  }
}

interface homeRouteRouteChildren {
  homeAboutRoute: typeof homeAboutRoute
  homeAddRoute: typeof homeAddRoute
  homeTestRoute: typeof homeTestRoute
  homeIndexRoute: typeof homeIndexRoute
}

const homeRouteRouteChildren: homeRouteRouteChildren = {
  homeAboutRoute: homeAboutRoute,
  homeAddRoute: homeAddRoute,
  homeTestRoute: homeTestRoute,
  homeIndexRoute: homeIndexRoute,
}

const homeRouteRouteWithChildren = homeRouteRoute._addFileChildren(
  homeRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  homeRouteRoute: homeRouteRouteWithChildren,
  AuthIndexRoute: AuthIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
